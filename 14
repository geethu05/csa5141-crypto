#include <stdio.h>
#include <string.h>

#define MAX_LEN 100

char* encrypt(char* plaintext, int* key, int key_len) {
    int len = strlen(plaintext);
    char* ciphertext = (char*)malloc(len * sizeof(char));

    for (int i = 0; i < len; i++) {
        int shift = key[i % key_len];
        if (plaintext[i] >= 'a' && plaintext[i] <= 'z') {
            ciphertext[i] = 'a' + (plaintext[i] - 'a' + shift) % 26;
        } else if (plaintext[i] >= 'A' && plaintext[i] <= 'Z') {
            ciphertext[i] = 'A' + (plaintext[i] - 'A' + shift) % 26;
        } else {
            ciphertext[i] = plaintext[i]; // Leave non-alphabetic characters unchanged
        }
    }
    return ciphertext;
}

char* decrypt(char* ciphertext, int* key, int key_len) {
    int len = strlen(ciphertext);
    char* plaintext = (char*)malloc(len * sizeof(char));

    for (int i = 0; i < len; i++) {
        int shift = key[i % key_len];
        if (ciphertext[i] >= 'a' && ciphertext[i] <= 'z') {
            plaintext[i] = 'a' + (ciphertext[i] - 'a' - shift + 26) % 26;
        } else if (ciphertext[i] >= 'A' && ciphertext[i] <= 'Z') {
            plaintext[i] = 'A' + (ciphertext[i] - 'A' - shift + 26) % 26;
        } else {
            plaintext[i] = ciphertext[i]; // Leave non-alphabetic characters unchanged
        }
    }
    return plaintext;
}

int main() {
    char plaintext[MAX_LEN] = "sendmoremoney";
    int key[] = {90, 17, 23, 15, 21, 14, 11, 11, 2, 89};
    int key_len = sizeof(key) / sizeof(key[0]);

    char* ciphertext = encrypt(plaintext, key, key_len);
    printf("Ciphertext: %s\n", ciphertext);

    char* decrypted_text = decrypt(ciphertext, key, key_len);
    printf("Decrypted text: %s\n", decrypted_text);

    free(ciphertext);
    free(decrypted_text);

    return 0;
}
